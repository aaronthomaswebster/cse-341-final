{
  "swagger": "2.0",
  "info": {
    "title": "Users API",
    "description": "An API for managing your users",
    "version": "1.0.0"
  },
  "host": "cse-341-final-yegu.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/user/": {
      "get": {
        "tags": ["Users Endpoint"],
        "description": "Retrieves an authenticated user by their passport ID",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "passport_user_id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "resume": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Users Endpoint"],
        "description": "Updates a user by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": [true, "Name Required"]
                },
                "phone": {
                  "type": "string",
                  "match": "^[0-9]{3}-[0-9]{3}-[0-9]{4}$"
                },
                "passport_user_id": {
                  "type": "string",
                  "required": [true, "Passport User ID Required"]
                },
                "email": {
                  "type": "string",
                  "match": "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$"
                },
                "role": {
                  "type": "string",
                  "enum": ["admin", "user"],
                  "default": "user"
                },
                "resume": {
                  "type": "string",
                  "default": null
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/company/": {
      "get": {
        "tags": ["Company Endpoint"],
        "description": "Retrieves all companies in Database",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Company Endpoint"],
        "description": "Creates a company under your profile(Must be an admin user)",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/company/{id}": {
      "get": {
        "tags": ["Company Endpoint"],
        "description": "Retrieves a company by it's ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Company Endpoint"],
        "description": "Updates a company by it's ID(must be the owner of the company)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Company Endpoint"],
        "description": "Deletes a company by it's ID(must be the owner of the company)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/job/": {
      "get": {
        "tags": ["Jobs Endpoint"],
        "description": "Retrieves all jobs in the database",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Jobs Endpoint"],
        "description": "Creates a job under your company(must be an admin user)",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/job/{id}": {
      "get": {
        "tags": ["Jobs Endpoint"],
        "description": "Retrieves a job by it's ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Jobs Endpoint"],
        "description": "Update a job by it's ID(must be owner of the company)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Jobs Endpoint"],
        "description": "Update a job by it's ID(must be owner of the company)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/application/byjobId/{id}": {
      "get": {
        "tags": ["Applications Endpoint"],
        "description": "Retrieves all applications under the job ID(must be company owner)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/application/filterbystatus/{status}": {
      "get": {
        "tags": ["Applications Endpoint"],
        "description": "Returns a filtered list of applications under the specified status(User and Admin can use)",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/application/": {
      "post": {
        "tags": ["Applications Endpoint"],
        "description": "Creates an application for a specific Job",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/application/{id}": {
      "put": {
        "tags": ["Applications Endpoint"],
        "description": "Update the status of the application by it's ID(must be Job/Company Owner)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Applications Endpoint"],
        "description": "Can delete an application by it's ID(must be user, admin cannot delete)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}